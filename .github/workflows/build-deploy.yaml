name: Build Docker Images and Deploy Infrastructure

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build-docker:
    environment: google-cloud
    runs-on: ubuntu-latest
    outputs:
      server_image_tag: ${{ steps.export.outputs.server_image_tag }}
      vidgen_image_tag: ${{ steps.export.outputs.vidgen_image_tag }}
    steps:
      - name: ‚öôÔ∏è Set up repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: ‚öôÔ∏è Authenticate to Google Cloud
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

      - name: ‚öôÔ∏è Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'
        with:
          project_id: 'bai-buchai-p'

      - name: üîê Configure Docker authentication
        run: |
          gcloud auth configure-docker us-east1-docker.pkg.dev --quiet

      - name: üèóÔ∏è Build Docker images
        run: |
          BASE_IMAGE_TAG="us-east1-docker.pkg.dev/bai-buchai-p/bai-buchai-p-gar-usea1-docker/buch-ai-base:0.1.0"
          SERVER_IMAGE_TAG="us-east1-docker.pkg.dev/bai-buchai-p/bai-buchai-p-gar-usea1-docker/buch-ai-server:0.1.0"
          VIDGEN_IMAGE_TAG="us-east1-docker.pkg.dev/bai-buchai-p/bai-buchai-p-gar-usea1-docker/buch-ai-video-generator:0.1.0"

          echo "Building base image..."
          docker build -t $BASE_IMAGE_TAG --platform linux/amd64 \
            -f Dockerfile.base \
            --build-arg BUCHAI_ENV=${{ vars.BUCHAI_ENV }} \
            --build-arg BUCHAI_AUTH_JWT_KEY=${{ secrets.BUCHAI_AUTH_JWT_KEY }} \
            --build-arg BUCHAI_HF_API_KEY=${{ secrets.BUCHAI_HF_API_KEY }} \
            --build-arg BUCHAI_STRIPE_SECRET_KEY=${{ secrets.BUCHAI_STRIPE_SECRET_KEY }} \
            --build-arg BUCHAI_STRIPE_WEBHOOK_SECRET=${{ secrets.BUCHAI_STRIPE_WEBHOOK_SECRET }} \
            .

          echo "Building server image..."
          docker build -t $SERVER_IMAGE_TAG --platform linux/amd64 \
            -f Dockerfile.server \
            --build-arg BASE_IMAGE=$BASE_IMAGE_TAG \
            .

          echo "Building Video Generator image..."
          docker build -t $VIDGEN_IMAGE_TAG --platform linux/amd64 \
            -f app/tasks/video_generator/Dockerfile.video-generator \
            --build-arg BASE_IMAGE=$BASE_IMAGE_TAG \
            .

          echo "SERVER_IMAGE_TAG=$SERVER_IMAGE_TAG" >> $GITHUB_ENV
          echo "VIDGEN_IMAGE_TAG=$VIDGEN_IMAGE_TAG" >> $GITHUB_ENV

      - name: üì§ Push Docker images
        run: |
          docker push $SERVER_IMAGE_TAG
          docker push $VIDGEN_IMAGE_TAG

      - name: üì¶ Export image tags for downstream jobs
        id: export
        run: |
          echo "server_image_tag=$SERVER_IMAGE_TAG" >> $GITHUB_OUTPUT
          echo "vidgen_image_tag=$VIDGEN_IMAGE_TAG" >> $GITHUB_OUTPUT

  terraform:
    environment: google-cloud
    runs-on: ubuntu-latest
    needs: build-docker
    steps:
      - name: ‚öôÔ∏è Checkout repository
        uses: actions/checkout@v2

      - name: ‚öôÔ∏è Authenticate to Google Cloud
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

      - name: ‚öôÔ∏è Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'
        with:
          project_id: 'bai-buchai-p'

      - name: ‚öôÔ∏è Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.7.0"

      - name: ‚öôÔ∏è Generate terraform.tfvars
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
        run: |
          sed -e "s/{{AUTH_JWT_KEY}}/${{ secrets.AUTH_JWT_KEY }}/g" \
              -e "s/{{HF_API_KEY}}/${{ secrets.HF_API_KEY }}/g" \
              -e "s|{{SERVER_IMAGE_TAG}}|${{ needs.build-docker.outputs.server_image_tag }}|g" \
              -e "s|{{VIDGEN_IMAGE_TAG}}|${{ needs.build-docker.outputs.vidgen_image_tag }}|g" \
              terraform/p.tfvars.template > terraform/terraform.tfvars
          cat terraform/terraform.tfvars

      - name: ‚öôÔ∏è Terraform Init
        working-directory: ./terraform
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
        run: |
          rm -f .terraform.lock.hcl
          terraform init \
            -backend-config="bucket=bai-buchai-p-tfstate-usea1" \
            -backend-config="prefix=terraform/state" \
            -upgrade

      - name: ‚öôÔ∏è Terraform Validate
        working-directory: ./terraform
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
        run: terraform validate

      - name: ‚öôÔ∏è Import Existing Resources
        working-directory: ./terraform
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
        run: |
          terraform import google_bigquery_dataset.creations projects/bai-buchai-p/datasets/creations || true
          terraform import google_bigquery_dataset.credits projects/bai-buchai-p/datasets/credits || true
          terraform import google_bigquery_dataset.payments projects/bai-buchai-p/datasets/payments || true
          terraform import google_bigquery_dataset.tasks projects/bai-buchai-p/datasets/tasks || true
          terraform import google_bigquery_dataset.users projects/bai-buchai-p/datasets/users || true
          terraform import google_bigquery_table.creations_cost_centres projects/bai-buchai-p/datasets/creations/tables/cost_centres || true
          terraform import google_bigquery_table.creations_profiles projects/bai-buchai-p/datasets/creations/tables/profiles || true
          terraform import google_bigquery_table.credits_transactions projects/bai-buchai-p/datasets/credits/tables/transactions || true
          terraform import google_bigquery_table.payments_records projects/bai-buchai-p/datasets/payments/tables/records || true
          terraform import google_bigquery_table.tasks_video_generator projects/bai-buchai-p/datasets/tasks/tables/video_generator || true
          terraform import google_bigquery_table.users_auth projects/bai-buchai-p/datasets/users/tables/auth || true
          terraform import google_bigquery_table.users_credits projects/bai-buchai-p/datasets/users/tables/credits || true
          terraform import google_bigquery_table.users_geolocation projects/bai-buchai-p/datasets/users/tables/geolocation || true
          terraform import google_bigquery_table.users_profiles projects/bai-buchai-p/datasets/users/tables/profiles || true
          terraform import google_bigquery_table.users_subscriptions projects/bai-buchai-p/datasets/users/tables/subscriptions || true
          # Import Firestore databases (replaces BigQuery datasets and tables)
          terraform import google_firestore_database.main projects/bai-buchai-p/databases/\(default\) || true
          terraform import google_firestore_database.development projects/bai-buchai-p/databases/development || true
          # Import Firestore rules document
          terraform import google_firestore_document.security_rules projects/bai-buchai-p/databases/\(default\)/documents/_firestore/rules || true
          # Import other existing cloud resources
          terraform import google_storage_bucket.creations bai-buchai-p-stb-usea1-creations || true
          terraform import google_cloud_run_service.server us-east1/bai-buchai-p/bai-buchai-p-run-usea1-server || true
          terraform import google_cloud_run_v2_job.video_generator projects/bai-buchai-p/locations/us-east1/jobs/bai-buchai-p-crj-usea1-vidgen || true

      - name: ‚öôÔ∏è Terraform Plan
        working-directory: ./terraform
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
        run: terraform plan -out=tfplan

      - name: ‚öôÔ∏è Terraform Apply
        working-directory: ./terraform
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
        run: |
          terraform apply -auto-approve tfplan

      - name: üßπ Cleanup
        if: always()
        run: |
          rm -f terraform/terraform.tfvars 